git config --global user.name "Your Name"
git config --global user.email "email@example.com"

git init
git add 
git commit -m "dfaf"
git status -s
git log 
git log --oneline
#查看分支
git branch
#切换分支
git checkout + 分支
#删除分支
git branch -d (branchname)
#合并分支
git merge (branchname)
#查看log
git log --oneline --graph
#逆向查看日志
git log --reverse --oneline
git log --author=Linux --oneline -5
git log --pretty=oneline  #这个能查看到所有id
#查看差异
git diff file
#查看与某个版本的差异还可以添加路径
git diff HEAD -- [file/path]
#穿梭历史版本
git reset --hard commit_id 
#返回上一个版本
git reset --hard HEAD^  #HEAD表示当前版本
#查看后悔药来看log
git reflog
#命令git checkout -- readme.txt意思就是，把readme.txt文件在工作区的修改全部撤销，这里有两种情况：
#一种是readme.txt自修改后还没有被放到暂存区，现在，撤销修改就回到和版本库一模一样的状态；
#一种是readme.txt已经添加到暂存区后，又作了修改，现在，撤销修改就回到添加到暂存区后的状态。
#总之，就是让这个文件回到最近一次git commit或git add时的状态。

#还有一种情况是当git add后已经放到暂存区了，并没有提交
git reset HEAD file #可以把git add 撤销掉  注意：这里没有加--hard
#小节：
#场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令git checkout -- file。
#场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令git reset HEAD file，就回到了场景1，第二步按场景1操作。
#场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退一节，不过前提是没有推送到远程库。

#删除文件
#你已经git add 并且git commit 了一个文件 这时候你想删除该文件 你先本地rm file然后运行下面两条命令
git rm file 
git commit -m “remove file”
#当你删除出错 删除了版本库的文件 你可以使用git check out -- file恢复


#===================================================================================================
# 生存ssh key 
ssh-keygen -t rsa -C "280723148@qq.com"
cat ~/.ssh/id_rsa.pub 将这个添加到你的github账户上去 就可以提交代码到github

#我们在github上创建了一个空的repo：git_learn,然后添加一个README.md
echo "# git_learn" >> README.md
git init
git add README.md
git commit -m "first commit"
#运行以下命令就可以把本地仓库与远程仓库关联
#添加后，远程库的名字就是origin，这是Git默认的叫法，也可以改成别的，但是origin这个名字一看就知道是远程库
git remote add origin git@github.com:280723148/git_learn.git
#运行以下命令就可以就可以把本地内容推送到远程仓库
#由于远程库是空的，我们第一次推送master分支时，加上了-u参数，Git不但会把本地的master分支内容推送的远程新的master分支，还会把本地的master分支和远程的master分支关联起来，在以后的推送或者拉取时就可以简化命令
git push -u origin master
#以后只要本地做了提交 就可以使用
git push origin master #这样就把本地最新的master分支修改推送到github，这才是真正的分布式版本库

#小结：
#要关联一个远程库，使用命令git remote add origin git@server-name:path/repo-name.git；
#关联后，使用命令git push -u origin master第一次推送master分支的所有内容；
#此后，每次本地提交后，只要有必要，就可以使用命令git push origin master推送最新修改；

#远程克隆
git clone git@github.com:michaelliao/gitskills.git
git clone git://104.130.246.128/openstack/horizon.git /opt/stack/horizon1 --branch master
#use ssh
git clone https://github.com/280723148/git_learn.git
#use https
git clone git@github.com:280723148/git_learn.git

#在GitHub上，可以任意Fork开源仓库；
#自己拥有Fork后的仓库的读写权限；
#可以推送pull request给官方仓库来贡献代码。


#==============================================================================================================

#分支管理


